input {

  file {
    path => "/opt/log/norcams.log"
    type => "syslog"
    start_position => beginning
  }

  file {
    path => "/opt/log/nova.log"
    type => "nova"
    start_position => beginning
  }

  file {
    path => "/opt/log/glance.log"
    type => "glance"
    start_position => beginning
  }

  file {
    path => "/opt/log/neutron.log"
    type => "neutron"
    start_position => beginning
  }

  file {
    path => "/opt/log/cinder.log"
    type => "cinder"
    start_position => beginning
  }

  file {
    path => "/opt/log/keystone.log"
    type => "keystone"
    start_position => beginning
  }

  file {
    path => "/opt/log/swift.log"
    type => "swift"
    start_position => beginning
  }

  file {
    path => "/opt/log/horizon.log"
    type => "horizon"
    start_position => beginning
  }

  file {
    path => "/opt/log/*/messages"
    type => "syslog"
    start_position => beginning
  }


}

filter {
  if [type] =~ /^(nova|glance|neutron|cinder|keystone|horzion)$/ {
    if [component] == "calico-dhcp-agent" and [message] =~ /(?i)MaxRetryError|ReadTimeoutError/ {
      drop{}
    }
    grok {
      break_on_match => true
      match => [
        "message", "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:loglevel} %{HOSTNAME:hostname} %{DATA:component}: %{GREEDYDATA:message}",
        "message", "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:loglevel} %{HOSTNAME:hostname} %{DATA:component} %{GREEDYDATA:message}"
      ]
      add_tag => "openstack_logs"
    }
  } else if [type] == "syslog" {
    if [message] =~ /(?i)nova|glance|neutron|cinder|keystone|horzion|calico-dhcp-agent|etcd/ {
        drop{}
    }
    grok {
      break_on_match => true
      match => [
        "message", "%{TIMESTAMP_ISO8601:timestamp} %{WORD:syslog_type}.%{WORD:loglevel} %{HOSTNAME:hostname} %{GREEDYDATA:message}"
      ]
      add_tag => "system_logs"
    }
  }
}

output {
  elasticsearch {
    hosts => "127.0.0.1:9200"
  }

  #file {
  #  path => "/var/log/logstash/%{openstack_hostname}-%{+YYYY-MM-dd}.log"
  #  codec => "rubydebug"
  #}

}
