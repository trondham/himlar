---
network::interfaces_hash:
  'eth0':
    ipaddress: "%{hiera('netcfg_mgmt_netpart')}.41"
    netmask:   "%{hiera('netcfg_mgmt_netmask')}"
    gateway:   "%{hiera('netcfg_mgmt_gateway')}"
    mtu:       '1500'
    dns1:      "%{hiera('netcfg_dns_server1')}"
    dns2:      "%{hiera('netcfg_dns_server2')}"
    domain:    "%{hiera('netcfg_dns_search')}"
    defroute:  'no'
    peerdns:   'yes'
  'eth1':
    ipaddress: "%{hiera('netcfg_trp_netpart')}.41"
    netmask:   "%{hiera('netcfg_trp_netmask')}"
    gateway:   "%{hiera('netcfg_trp_netpart')}.1"
    srcaddr:   "%{hiera('netcfg_public_netpart')}.249"
    defroute:  'yes'
  'dummy0':
    ipaddress: "%{hiera('netcfg_public_netpart')}.249"
    netmask:   '255.255.255.255'
    defroute:  'no'

# Turn on firewall logging for firewall debug
#profile::firewall::post::log: true

profile::base::network::manage_dummy: true

include:
  default:
    - profile::database::galera

mysql::server::restart:         false

profile::database::galera::firewall_rules:
  '211 galera accept tcp nat':
    'proto':  'tcp'
    'dport':  ['4567', '4568']
    'source': '192.168.113.1/32'
  '212 galera accept udp nat':
    'proto':  'udp'
    'dport':  ['4567', '4568']
    'source': '192.168.113.1/32'
  '213 wsrep sst accept tcp for nat':
    'proto':  'tcp'
    'dport':  '4444'
    'source': '192.168.113.1/32'

db_ssl_key:       '/etc/pki/tls/private/db01.iaas.intern.key.pem'
db_ssl_cert:      '/etc/pki/tls/certs/db01.iaas.intern.cert.pem'
db_ssl_ca:        '/etc/pki/tls/certs/cachain.pem'

# Enable ssl for wsrep and sst
wsrep_provider_options: "base_host=%{::ipaddress_trp1};pc.recovery=1;socket.ssl_key=%{hiera('db_ssl_key')};socket.ssl_cert=%{hiera('db_ssl_cert')};socket.ssl_ca=%{hiera('db_ssl_ca')}"
wsrep_sst_method:       'mariabackup'
wsrep_cluster_address:  'gcomm://192.168.12.249,192.168.13.249,192.168.12.252'
wsrep_node_address:     '192.168.13.249'

# Use this to test rsync without SSL
#wsrep_provider_options: "base_host=%{::ipaddress_trp1};pc.recovery=1;"
#wsrep_sst_method:       'rsync'

# Do not create root user for second server in cluster
mysql::server::create_root_user: false

profile::openstack::database::sql::keystone_enabled:    false
profile::openstack::database::sql::glance_enabled:      false
profile::openstack::database::sql::nova_enabled:        false
profile::openstack::database::sql::neutron_enabled:     false
profile::openstack::database::sql::cinder_enabled:      false
profile::openstack::database::sql::gnocchi_enabled:     false
profile::openstack::database::sql::ceilometer_enabled:  false

# sensu
profile::monitoring::sensu::agent::checks:
  'check-wsrep-ready':
    command:      "check-wsrep-ready.rb -u sensu -h localhost -p %{hiera('sensu_mysql_password')}"
    interval:     60
    subscribers:  ['checks']
