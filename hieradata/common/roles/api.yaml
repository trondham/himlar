---
include:
  default:
    - profile::highavailability::loadbalancing::haproxy
    - profile::logging::rsyslog::client

# Sensu
profile::monitoring::sensu::agent::plugins:
  sensu-plugins-haproxy:
    type:         package
    pkg_version:  '1.1.0'

profile::monitoring::sensu::agent::checks:
  'metrics-haproxy-overview':
    type:         'metric'
    command:      "metrics-haproxy.rb --scheme haproxy.%{::hostname} --server-metrics -c 127.0.0.1 -P 9000 -q haproxy_stats"
    interval:     60
    subscribers:  ['metrics']
    handlers:     ['graphite_tcp']

profile::base::firewall::purge_firewall:                            true
profile::base::network::manage_dummy:                               true
profile::highavailability::loadbalancing::haproxy::manage_haproxy:  true
profile::highavailability::loadbalancing::haproxy::manage_firewall: true
profile::highavailability::loadbalancing::haproxy::firewall_extras:
  dport: ['5000', '8774', '8776', '9292', '9696', '80', '443']

star_api_ssl_pem: "star.api.%{hiera('domain_public')}.pem"
api_ssl_pem:      "api.%{hiera('domain_public')}.pem"
status_ssl_pem:   "status.%{hiera('domain_public')}.pem"

profile::highavailability::loadbalancing::haproxy::haproxy_listens:
  identity:
    options:
      http-request:   'add-header X-Forwarded-Proto https if { ssl_fc }'
    bind:
      "%{::ipaddress_public1}:5000":  ['ssl', 'crt', "%{hiera('star_api_ssl_pem')}", 'crt', "%{hiera('api_ssl_pem')}"]
  compute:
    options:
      http-request:   'add-header X-Forwarded-Proto https if { ssl_fc }'
    bind:
      "%{::ipaddress_public1}:8774":  ['ssl', 'crt', "%{hiera('star_api_ssl_pem')}"]
  volume:
    options:
      http-request:   'add-header X-Forwarded-Proto https if { ssl_fc }'
    bind:
      "%{::ipaddress_public1}:8776":  ['ssl', 'crt', "%{hiera('star_api_ssl_pem')}"]
  image:
    options:
      http-request:   'add-header X-Forwarded-Proto https if { ssl_fc }'
    bind:
      "%{::ipaddress_public1}:9292":  ['ssl', 'crt', "%{hiera('star_api_ssl_pem')}"]
  network:
    options:
      http-request:   'add-header X-Forwarded-Proto https if { ssl_fc }'
    bind:
      "%{::ipaddress_public1}:9696":  ['ssl', 'crt', "%{hiera('star_api_ssl_pem')}"]
  status:
    options:
      http-request:   'add-header X-Forwarded-Proto https if { ssl_fc }'
      redirect:       'scheme https if !{ ssl_fc }'
    bind:
      "%{::ipaddress_public1}:443":  ['ssl', 'crt', "%{hiera('status_ssl_pem')}"]
      "%{::ipaddress_public1}:80": []
  monitor:
    options:
      stats:
        - 'enable'
        - 'hide-version'
        - 'realm Sensu\ Monitor\ Stats'
        - 'uri /haproxy_stats '
    bind:
      '127.0.0.1:9000': []

profile::highavailability::loadbalancing::haproxy::haproxy_balancermembers:
  identity:
    listening_service:  'identity'
    server_names:       ['identity-01']
    ipaddresses:        ["identity.%{hiera('domain_trp')}"]
    ports:              '5000'
    options:            'check'
  compute:
    listening_service:  'compute'
    server_names:       ['novactrl-01']
    ipaddresses:        ["compute.%{hiera('domain_trp')}"]
    ports:              '8774'
    options:            'check'
  volume:
    listening_service:  'volume'
    server_names:       ['volume-01']
    ipaddresses:        ["volume.%{hiera('domain_trp')}"]
    ports:              '8776'
    options:            'check'
  image:
    listening_service:  'image'
    server_names:       ['image-01']
    ipaddresses:        ["image.%{hiera('domain_trp')}"]
    ports:              '9292'
    options:            'check'
  network:
    listening_service:  'network'
    server_names:       ['network-01']
    ipaddresses:        ["network.%{hiera('domain_trp')}"]
    ports:              '9696'
    options:            'check'
  status:
    listening_service:  'status'
    server_names:       ['status-01']
    ipaddresses:        ["status.%{hiera('domain_trp')}"]
    ports:              '8080'
    options:            'check'
